# SHRC #
# vim: ft=sh

# Init ------------------------------------------------------------------------

# Source env variables
. $XDG_CONFIG_HOME/env_variables

# Source local additional env
[ -f $XDG_LOCAL_HOME/supp/env ] && . $XDG_LOCAL_HOME/supp/env

# Restore OLDPWD
[ -f "$XDG_HISTORY_DIR/oldpwd" ] && . "$XDG_HISTORY_DIR/oldpwd"

# Logout
trap "[ -f "$XDG_CONFIG_HOME/shell/logout" ] && . $XDG_CONFIG_HOME/shell/logout" EXIT

# Source aliases
. $XDG_CONFIG_HOME/shell/aliases


# PROMPT ----------------------------------------------------------------------

_pwd() { # '~/test/ex/foo/bar/aaa/bb' -> '~/.../foo/bar/aaa/bb'
    n=${PWD/"$HOME"/"~"}
    f=${n%%/*}
    while [ ${#n} -gt 35 ]; do n="${n#*/}"; done
    [ $f = ${n%%/*} ] && echo "$n" || echo "$f/.../${n#$f}"
}

# user@host:dir
PS1=$'\e[1m$USER@$HOSTNAME\e[90m:$(_pwd)\e[0m'

# Set window title
case $TERM in
    xterm*|rxvt*|screen*)
        if [ -z "$ZSH_VERSION" ] && [ "$0" != "dash" ]; then # zsh has some problems here
            PS1=$'\e]0;$USER@$HOSTNAME:${PWD/"$HOME"/"~"}\a'"$PS1"
        fi
        ;;
esac

# Normal user or root ( $/# )
export PS1=$(printf "($(ps -p "$$" -o 'comm='))$PS1\e[1m$([ $(id -u) -eq 0 ] && echo '#' || echo '$')\e[0m ")


# WRAPPERS --------------------------------------------------------------------

wttr() { curl wttr.in/$1; }

feh() {
    if [ -d "$1" ] || [ -d "$2" ]; then
        command feh "$@" > /dev/null 2>&1 & disown
    else
        command feh --start-at "$@" > /dev/null 2>&1 & disown
    fi
}

find() {
    command find $@ 2> /dev/null
}
