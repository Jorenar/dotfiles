# SHRC #
# vim: ft=sh fdm=marker fen

# Init {{{1

# Source env variables
. $XDG_CONFIG_HOME/env_variables

# Source local additional env
[ -f $XDG_LOCAL_HOME/supp/env ] && . $XDG_LOCAL_HOME/supp/env

# Restore OLDPWD
[ -f "$XDG_HISTORY_DIR/oldpwd" ] && . "$XDG_HISTORY_DIR/oldpwd"

# Logout
trap "[ -f "$XDG_CONFIG_HOME/shell/logout" ] && . $XDG_CONFIG_HOME/shell/logout" EXIT

# Source aliases
. $XDG_CONFIG_HOME/shell/aliases


# PROMPT {{{1
# (shell) {{{2
PS1='\033[90m${PROMPT_SHOW_SHELL+($0)}\033[0m' # If variable is set, then '(shell)user@hos...'

# user@host:pwd {{{2
PS1="$PS1"'\033[1m$USER@$HOSTNAME:\033[0;90m$(echo $PWD | sed -r s,$HOME,~,)\033[0m'

# :git_branch {{{2
PS1="$PS1\$(git rev-parse --abbrev-ref HEAD 2> /dev/null | sed -r 's/(.*)/:\033[0;1;4;90m\1/')\033[0m"

# - WINDOW TITLE {{{2
case $TERM in
    xterm*|rxvt*|screen*)
        PS1='\033]0;$USER@$HOSTNAME:$(echo $PWD | sed -r s,$HOME,~,)\007'"$PS1"
        ;;
esac

# $ {{{2
PS1="$PS1\033[1m$\033[0m "

# - PRINT PROMPT {{{2
[ "$0" = "dash" ] && PS1=$(printf "$PS1") || PS1=$(echo -ne "$PS1")

# WRAPPERS {{{1

wttr() { curl wttr.in/$1; }

feh() {
    if [ -d "$1" ] || [ -d "$2" ]; then
        command feh "$@" > /dev/null 2>&1 & disown
    else
        command feh --start-at "$@" > /dev/null 2>&1 & disown
    fi
}

find() {
    command find $@ 2> /dev/null
}
