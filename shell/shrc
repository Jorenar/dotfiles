#!sh

if [ -x "$(command -v tmux)" ] && [ -n "$DISPLAY" ] && [ -z "$TMUX" ] && [ -z "$SSH_CLIENT" ]; then
    if ps -ef | grep tmux | grep -v -q grep; then
        exec tmux attach \; new-session
    else
        exec tmux -f $XDG_CONFIG_HOME/tmux/tmux.conf
    fi
fi

# Init ------------------------------------------------------------------------

# Source env variables
. $XDG_CONFIG_HOME/env/variables

# History size
export HISTSIZE=5000

# Restore OLDPWD
[ -f "$HISTORY_DIR/oldpwd" ] && . "$HISTORY_DIR/oldpwd"

# Logout
trap "[ -f "$XDG_CONFIG_HOME/shell/logout" ] && . $XDG_CONFIG_HOME/shell/logout" EXIT

# Source aliases
. $XDG_CONFIG_HOME/shell/aliases

# FZF
. $XDG_CONFIG_HOME/shell/fzf.sh

# Source local additional shell config
[ -f $HOSTDOTS/shell ] && . $HOSTDOTS/shell


# PROMPT ----------------------------------------------------------------------

PS1=

# statusline {{{

## save cursor position and jump to the top of the screen
PS1='\001\033[s\033[1;1H\002\001'

# set bg color
PS1="$PS1"'\033[48;5;234m'

# (shell)
PS1="$PS1"'($(basename $0))'

# number of jobs
PS1="$PS1"'[J:$(jobs | wc -l)]'

# [
PS1="$PS1"'  ['

# user@host
PS1="$PS1"' $USER@$HOSTNAME  '

# pwd
PS1="$PS1"'$(echo $PWD | sed "s,^$HOME\(\/\|$\),~/,") '

# git_branch
PS1="$PS1""\$(git rev-parse --abbrev-ref HEAD 2> /dev/null | sed 's/.*/ & /')"

# ]
PS1="$PS1"']'

# tmux windows list
[ -n "$TMUX" ] && PS1="$PS1"'  [ $(tmux list-windows -F "#{E:window-status-format}" | tr "\n" " ")]'

# return to prompt
PS1="$PS1"'\002\001\033[K\033[0m\033[u\002'

PS1="$PS1"''
# }}}

# WINTITLE: user@host:pwd
PS1="$PS1"'\001\033]0;$USER@$HOSTNAME:$(echo $PWD | sed s,^$HOME,~,)\007\002'

# newline
case "$(basename $0)" in
    bash)
        __new_line_ps1 () {
            IFS='[;' read -p $'\033[6n' -d R -rs _ y _ _
            [ "$y" -eq 1 ] && printf "\n\033[0m"
        }
        PS1="$PS1"'$(__new_line_ps1)'
        ;;
    *) PS1="$PS1"'\n' ;;
esac

# $
PS1="$PS1"'\001\033[36m\002$\001\033[0m\002 '

# eval PS1
PS1="$(printf "$PS1")"
