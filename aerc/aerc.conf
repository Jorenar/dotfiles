# aerc main configuration

# vim: fdm=marker

[ui] # {{{1

# Describes the format for each row in a mailbox view. This field is compatible
# with mutt's printf-like syntax.
index-format=%D %-17.17n %s

# See time.Time#Format at https://godoc.org/time#Time.Format
timestamp-format=2006-01-02 15:04

# Width of the sidebar, including the border.
sidebar-width=20

# Message to display when viewing an empty folder.
empty-message=(no messages)

# Message to display when no folders exists or are all filtered
empty-dirlist=(no folders)

# Enable mouse events in the ui, e.g. clicking and scrolling with the mousewheel
mouse-enabled=true

# Ring the bell when new messages are received
new-message-bell=false

# Marker to show before a pinned tab's name.
pinned-tab-marker='`'

# List of space-separated criteria to sort the messages by, see *sort*
# command in *aerc*(1) for reference. Prefixing a criterion with "-r "
# reverses that criterion.
#    Example: "from -r date"
sort=

# Moves to next message when the current message is deleted
next-message-on-delete=false

# The directories where the stylesets are stored. It takes a colon-separated
# list of directories.
#stylesets-dirs=@SHAREDIR@/stylesets/

# Sets the styleset to use for the aerc ui elements.
styleset-name=default

[viewer] # {{{1

# Specifies the pager to use when displaying emails. Note that some filters
# may add ANSI codes to add color to rendered emails, so you may want to use a
# pager which supports ANSI codes.
pager=less -R

# If an email offers several versions (multipart), you can configure which
# mimetype to prefer. For example, this can be used to prefer plaintext over
# html emails.
alternatives=text/plain,text/html

# Default setting to determine whether to show full headers or only parsed
# ones in message viewer.
show-headers=false

# Layout of headers when viewing a message. To display multiple headers in the
# same row, separate them with a pipe, e.g. "From|To". Rows will be hidden if
# none of their specified headers are present in the message.
header-layout=From,To,Cc|Bcc,Date,Subject

# Whether to always show the mimetype of an email, even when it is just a single part
always-show-mime=false

# How long to wait after the last input before auto-completion is triggered.
completion-delay=250ms

# Global switch for completion popovers
completion-popovers=true

[compose] # {{{1

# Specifies the command to run the editor with. It will be shown in an embedded
# terminal, though it may also launch a graphical window if the environment
# supports it. Defaults to $EDITOR, or vi.
editor=

# Default header fields to display when composing a message. To display
# multiple headers in the same row, separate them with a pipe, e.g. "To|From".
header-layout=From,To,Subject

# Specifies the command to be used to tab-complete email addresses. Any
# occurrence of "%s" in the address-book-cmd will be replaced with what the
# user has typed so far.
#
# The command must output the completions to standard output, one completion
# per line. Each line must be tab-delimited, with an email address occurring as
# the first field. Only the email address field is required. The second field,
# if present, will be treated as the contact name. Additional fields are
# ignored.
address-book-cmd=

[filters] # {{{1

# Filters allow you to pipe an email body through a shell command to render
# certain emails differently, e.g. highlighting them with ANSI escape codes.
#
# The first filter which matches the email's mimetype will be used, so order
# them from most to least specific.
#
# You can also match on non-mimetypes, by prefixing with the header to match
# against (non-case-sensitive) and a comma, e.g. subject,text will match a
# subject which contains "text". Use header,~regex to match against a regex.

subject,~^\[PATCH=awk -f /usr/share/aerc/filters/hldiff
#text/html= /usr/share/aerc/filters/html
text/plaintext=awk -f /usr/share/aerc/filters/plaintext
text/html=elinks -dump
text/*=awk -f /usr/share/aerc/filters/plaintext
image/*=feh -

[triggers] # {{{1

# Triggers specify commands to execute when certain events occur.
#   Example: new-email=exec notify-send "New email from %n" "%s"<Enter>

# Executed when a new email arrives in the selected folder
new-email=

[templates] # {{{1
# Templates are used to populate email bodies automatically.

# # The directories where the templates are stored. It takes a colon-separated
# # list of directories.
# template-dirs=@SHAREDIR@/templates/
#
# # The template to be used for quoted replies.
# quoted-reply=quoted_reply
#
# # The template to be used for forward as body.
# forwards=forward_as_body
