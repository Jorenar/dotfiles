# TMUX.CONF #
# vim: ft=tmux fdm=marker

set -g extended-keys off

set -g prefix C-Space
bind C-Space send-prefix

set -g default-command  "exec $SHELL"
set -g default-terminal "$TERM"
set -g default-shell    "/bin/sh"

set -g detach-on-destroy off
set -g history-file ${XDG_STATE_HOME}/tmux/history
set -g history-limit 50000
set -s escape-time 0

setw -g mode-keys vi
set  -g status-keys emacs

set -g  mouse on
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

set -g status on
set -g status-interval 1
set -g status-style fg=colour101
set -g status-left-length 0
set -g status-left ' #{?client_prefix,WAIT,#{?pane_in_mode,COPY,#{?pane_synchronized,SYNC,TMUX}}} | #(exec $XDG_CONFIG_HOME/tmux/scripts/sessions_status.sh)| '
set -g status-right ''

bind -Troot MouseDown1Status {
    if -F '#{==:#{mouse_status_range},session}' {
        switch-client
    } {
        if -F '#{==:#{mouse_status_range},window}' {
            select-window
        } {
            display -d0 '#{mouse_status_line} #{mouse_status_range}'
        }
    }
}


setw -g monitor-activity on
set  -g visual-activity on
set  -g focus-events on

set -g window-style 'bg=colour234'
set -g window-active-style 'fg=terminal,bg=terminal'
set -g window-status-format '#F$#I:#W'
set -g window-status-current-format '#F$#I:#W'

set -g pane-border-style fg=white
set -g pane-active-border-style "bg=default fg=white"

set  -g allow-rename on
setw -g automatic-rename on
set  -g set-titles on
set  -g set-titles-string "#W \| #T"


bind "'" split-window -h
bind C-s command-prompt -I 'new-session '
bind Tab switch-client -n
bind BTab switch-client -p
bind % split-window -h -c "#{pane_current_path}"
bind C new-window -c "#{pane_current_path}"
bind N previous-window

bind ? copy-mode \; send-key ?
bind / copy-mode \; send-key /

bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

bind-key C-v new-window -c "#{pane_current_path}" 'tmux capture-pane -t:! -J -p -S- -E- | tr -s "\n" | vim +"set bt=nofile" + -'


bind 'C-w' 'switch-client -T prefix_C-w'

bind -T prefix_C-w    'w'  'select-pane -t :.+'
bind -T prefix_C-w  'C-w'  'select-pane -t :.+'

bind -T prefix_C-w    'p'  'last-pane'
bind -T prefix_C-w  'C-p'  'last-pane'

bind -T prefix_C-w    'h'  'select-pane -L'
bind -T prefix_C-w    'j'  'select-pane -D'
bind -T prefix_C-w    'k'  'select-pane -U'
bind -T prefix_C-w    'l'  'select-pane -R'

bind -T prefix_C-w  'C-h'  'select-pane -L'
bind -T prefix_C-w  'C-j'  'select-pane -D'
bind -T prefix_C-w  'C-k'  'select-pane -U'
bind -T prefix_C-w  'C-l'  'select-pane -R'

bind -T prefix_C-w    'H'  'swap-pane -d -t -1'
bind -T prefix_C-w    'J'  'swap-pane -D'
bind -T prefix_C-w    'K'  'swap-pane -U'
bind -T prefix_C-w    'L'  'swap-pane -d -t +1'


# TPM
#   tmux-pass {{{1

set -g @plugin 'Jorenar/tmux-pass'  # 'rafi/tmux-pass'

set -g @pass-hide-preview on
set -g @pass-show-fzf-keymaps off
set -g @pass-fzf-keymaps "enter=paste"

#   tmux-ressurect {{{1

set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g command-alias[100] resurrect-save='run "$TMUX_PLUGIN_MANAGER_PATH/tmux-resurrect/scripts/save.sh"'
set -g command-alias[101] resurrect-restore='run "$TMUX_PLUGIN_MANAGER_PATH/tmux-resurrect/scripts/restore.sh"'
set -g command-alias[102] resurrect-restore-from-auto='run "$XDG_CONFIG_HOME/tmux/scripts/ressurect-auto.sh restore"'

set -g @resurrect-save ' '
set -g @resurrect-restore ' '
set -g @resurrect-dir ${XDG_STATE_HOME}/tmux/resurrect
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-hook-pre-restore-all 'tmux set -g default-command "$(tmux show -gv default-command | sed "s/^exec //")"'
set -g @resurrect-processes 'ssh'
run 'mkdir -p "$(tmux show -gv @resurrect-dir)"'
run '$XDG_CONFIG_HOME/tmux/scripts/ressurect-auto.sh init'

#   tmux-matryoshka {{{1

set -g @plugin 'niqodea/tmux-matryoshka'

set -g @matryoshka_down_keybind 'C-S-F1'
set -g @matryoshka_up_keybind 'C-S-F2'
set -g @matryoshka_up_recursive_keybind 'C-S-F3'

# run 'sed "s/bind -n/bind/g" $XDG_CONFIG_HOME/tmux/plugins/tmux-matryoshka/matryoshka.tmux | sh'

# {{{1

set-environment -g TMUX_PLUGIN_MANAGER_PATH $XDG_DATA_HOME/tmux/plugins

set -g command-alias[110] tpm-update='run "$XDG_CONFIG_HOME/tmux/scripts/tpm-update.sh"'

set-option -g @tpm-install ""
set-option -g @tpm-update ""
set-option -g @tpm-clean ""

set -g @tpm_plugins 'tmux-plugins/tpm'
run '$TMUX_PLUGIN_MANAGER_PATH/tpm/tpm'
