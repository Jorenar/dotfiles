# vim: ft=sh

if [ -z "$(type -t _ssh_configfile)" ]; then
    _ssh_configfile ()
    {
        # orginal body {{{
        set -- "${words[@]}";
        while (($# > 0)); do
            if [[ $1 == -F* ]]; then
                if ((${#1} > 2)); then
                    configfile="$(dequote "${1:2}")";
                else
                    shift;
                    [[ -n ${1-} ]] && configfile="$(dequote "$1")";
                fi;
                break;
            fi;
            shift;
        done
        # }}}

        if [ -z "$configfile" ]; then
            if [ -e "$HOME/.ssh/config" ]; then
                configfile="$HOME/.ssh/config"
            elif [ -e "${XDG_CONFIG_HOME:-$HOME/.config}"/ssh/config ]; then
                configfile="${XDG_CONFIG_HOME:-$HOME/.config}"/ssh/config
            fi
        fi
    }

    readonly -f _ssh_configfile
fi

if [ -x "$(command -v podman)" ]; then
    _podrun () {
        mapfile -t COMPREPLY < <(
            compgen -W "$(
                podman images --format='{{.Repository}}' | awk -F'/' '{ print $NF }'
            )" -- "${COMP_WORDS[COMP_CWORD]}"
        )
    }
    complete -F _podrun podrun
fi

_wsl_exe () {
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"

    case "$prev" in
        -d|-t)
            mapfile -t COMPREPLY < <(
                compgen -W "$(
                    wsl.exe -l -q | tr -d '\0' | tr -d '\r'
                )" -- "$cur"
            )
            ;;
    esac
}
complete -F _wsl_exe wsl.exe

# prevents \$ when completing path with variables
# alias compopt='compopt -o noquote'
