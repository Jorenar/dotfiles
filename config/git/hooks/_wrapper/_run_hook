#!/usr/bin/env sh

conf_key="versioned-hooks.USER=$(id -un)"

repo_root="$(dirname "$GIT_DIR")"
hook_name="$(basename "$0")"

v_hooks_dir="$repo_root"/.githooks # important: no trailing slash!
v_hook="$v_hooks_dir"/"$hook_name"

versioned_hook__save_hash () {
    obj="${1:-$hook_name}"
    val="$2"

    if [ -z "$val" ]; then
        [ "$obj" = "all" ] && fobj="$v_hooks_dir" || fobj="$v_hook"
        val="$(git ls-tree --format='%(objectname)' HEAD "$fobj")"
    fi

    git config --local "$conf_key"."$obj" "$val"
}

versioned_hook__try_running () {
    v_hooks_dir="$repo_root"/.githooks # important: no trailing slash!
    v_hook="$v_hooks_dir"/"$hook_name"

    if [ ! -x "$v_hook" ]; then
        return 0
    fi


    yn="y"
    while true; do
        all_val="$(git config --get "$conf_key".all 2> /dev/null)"
        hook_val="$(git config --get "$conf_key"."$hook_name" 2> /dev/null)"

        [ "$all_val" = "0" ] && return 0
        [ "$hook_val" = "0" ] && return 0

        [ "$all_val" = "*" ] && break
        [ "$hook_val" = "*" ] && break

        dir_hash="$(git ls-tree --format='%(objectname)' HEAD "$v_hooks_dir")"
        [ -n "$all_val" ] && [ "$dir_hash" = "$all_val" ] && break

        hook_hash="$(git ls-tree --format='%(objectname)' HEAD "$v_hook")"
        [ -n "$hook_val" ] && [ "$hook_hash" = "$hook_val" ] && break

        yn= && break
    done


    while true; do
        case "$yn" in
            y|n|h|H|a|A|x|X|q) break ;;
            '?')
                cat << EOF
y - run this versioned hook
n - don't run this versioned hook
N - never run this versioned hook
h - always run this versioned hook until its SHA1 changes
H - always run this versioned hook
a - always run ALL versioned hooks until SHA1 of any of them changes
A - always run ALL versioned hooks
q - abort operation
? - print this help
EOF
                ;;
            '') ;;
            *) >&2 echo "Wrong option" ;;
        esac
        printf 'Run versioned %s githook? [y,n,h,H,a,A,q,?] ' "$hook_name"
        exec < /dev/tty
        read -r yn
    done

    case "$yn" in
        h) versioned_hook__save_hash "$hook_name" ;;
        H) versioned_hook__save_hash "$hook_name" '*' ;;
        a) versioned_hook__save_hash all ;;
        A) versioned_hook__save_hash all '*' ;;
        N) versioned_hook__save_hash "$hook_name" 0 ;;
    esac

    case "$yn" in
        n) ;;
        q) echo "Aborting..."; exit 1 ;;
        *) "$v_hook" "$@" || exit $?  ;;
    esac

    return 0
}

run_hooks () {
    hook="$(dirname "$0")"/../"$hook_name"
    if [ -x "$hook" ]; then
        "$hook" "$@" || exit $?
    fi

    versioned_hook__try_running "$@"

    hook="$repo_root"/.git/hooks/"$hook_name"
    if [ -x "$hook" ]; then
        "$hook" "$@" || exit $?
    fi
}

wrapper () {
    while :; do
        case "$1" in
            --save-hash)
                versioned_hook__save_hash "$2" "$3"
                shift 2
                ;;
            --generate-symlinks)
                man githooks | grep '^   [^ ]\+' | xargs -n1 ln -s "$0"
                ;;
            -?*)
                printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
                ;;
            *) break ;;
        esac
        shift
    done
}

if [ "$(basename "$0")" = "_run_hook" ] || [ "$1" = "WRAPPER" ]; then
    [ "$1" = "WRAPPER" ] && shift
    wrapper "$@"
    exit
fi

run_hooks "$@"
