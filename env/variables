# vim: ft=sh

# It is important for this file, to be in the same directory as 'profile' file
#    (originals, not symlinks)

pathmunge() {
    A=0  # append flag
    E=0  # use `eval` flag
    S=":" # separator

    while getopts "aes:" option; do
        case $option in
            a) A=1         ;;
            e) E=1         ;;
            s) S="$OPTARG" ;;
        esac
    done

    shift $((OPTIND - 1))
    unset option OPTARG

    if [ -z "$2" ]; then
        var='PATH'
        new="$1"
    else
        var="$1"
        new="$2"
    fi

    eval val="\$$var"

    case "$S$val$S" in
        *"$S$new$S"*) ;;
        "$S$S") updated="$new" ;;
        *) [ "$A" = "0" ] && updated="$new$S$val" || updated="$val$S$new" ;;
    esac

    if [ -n "$updated" ]; then
        if [ "$E" = "0" ]; then
            export "$var"="$updated"
        else
            eval "$var='$updated'"
        fi
    fi

    unset A S E var new val updated
}

# basics {{{1

# Name
export NAME="Jorengarenar"

# HOST
export HOSTNAME="${HOSTNAME:-$(hostname -s)}"

# Temp dir
export TMPDIR="${TMPDIR:-/tmp}"

# Virtual terminal number (if not set already by PAM)
export XDG_VTNR="${XDG_VTNR:-$(tty | sed 's/[^0-9]*//g')}"

# XDG Base Directory {{{1

export XDG_LOCAL_HOME="$HOME/.local" # this sould be one of defaults

export XDG_CACHE_HOME="$XDG_LOCAL_HOME/cache"
export XDG_CONFIG_HOME="$XDG_LOCAL_HOME/config"
export XDG_STATE_HOME="$XDG_LOCAL_HOME/state"
export XDG_DATA_HOME="$XDG_LOCAL_HOME/share"

if [ -z "$XDG_RUNTIME_DIR" ]; then
    XDG_RUNTIME_DIR="/run/user/$UID"
    if [ ! -d "$XDG_RUNTIME_DIR" ]; then
        XDG_RUNTIME_DIR="$TMPDIR/$USER-runtime"
    fi
fi
export XDG_RUNTIME_DIR


export XDG_AUX_DIR="$XDG_LOCAL_HOME/aux" # auxiliary, local configs

if [ -f "$XDG_CONFIG_HOME/user-dirs.dirs" ]; then
    eval "$(sed 's/^[^#].*/export &/g;t;d' $XDG_CONFIG_HOME/user-dirs.dirs)"
fi

export XDG_HISTORY_DIR="$XDG_STATE_HOME/history"

export XDG_INCLUDE_DIR="$XDG_LOCAL_HOME/include"
export XDG_LIB_DIR="$XDG_LOCAL_HOME/lib"

# RELOCATING {{{
# ~history {{{1
export HISTFILE="$XDG_HISTORY_DIR/shell"
export LESSHISTFILE=-
export MYCLI_HISTFILE="$XDG_HISTORY_DIR/mycli"
export MYSQL_HISTFILE="$XDG_HISTORY_DIR/mysql"
export NODE_REPL_HISTORY="$XDG_HISTORY_DIR/node_repl_history"
export SQLITE_HISTORY="$XDG_HISTORY_DIR/sqlite"

# ~misc {{{1

export CARGO_HOME="$XDG_DATA_HOME/cargo"
export CHKTEXRC="$XDG_CONFIG_HOME"
export CUDA_CACHE_PATH="$XDG_CACHE_HOME/nv"
export DCONF_PROFILE="$XDG_CONFIG_HOME/dconf/user"
export ELECTRUMDIR="$XDG_DATA_HOME/electrum"
export ELINKS_CONFDIR="$XDG_CONFIG_HOME/elinks"
export GIT_TEMPLATE_DIR="$XDG_CONFIG_HOME/git/template"
export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export GRADLE_USER_HOME="$XDG_DATA_HOME"/gradle
export GRIPHOME="$XDG_CONFIG_HOME/grip"
export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
export ICEAUTHORITY="$XDG_STATE_HOME/ICEauthority"
export IMAPFILTER_HOME="$XDG_CONFIG_HOME/imapfilter"
export INPUTRC="$XDG_CONFIG_HOME/readline/inputrc"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"
export MYSQL_HOME="$XDG_CONFIG_HOME/mysql"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export NUGET_PACKAGES="$XDG_CACHE_HOME/NuGetPackages"
export PASSWORD_STORE_DIR="$XDG_DATA_HOME/pass"
export R_ENVIRON_USER="$XDG_CONFIG_HOME/r/Renviron"
export RANDFILE="$XDG_CACHE_HOME/rnd"
export TEXMFHOME="$XDG_LOCAL_HOME/lib/texmf"
export UNCRUSTIFY_CONFIG="$XDG_CONFIG_HOME/uncrustify/default"
export VIMINIT="so $XDG_CONFIG_HOME/vim/vimrc"
export WINEPREFIX="$XDG_DATA_HOME/wine"

# Arduino {{{1
export ARDUINO_DIRECTORIES_DATA="$XDG_DATA_HOME/arduino"
export ARDUINO_DIRECTORIES_DOWNLOADS="$XDG_CACHE_HOME/arduino"
export ARDUINO_DIRECTORIES_USER="$XDG_LIB_DIR/arduino" # just treat it as directory for libraries

# Ccache {{{1
export CCACHE_CONFIGPATH="$XDG_CONFIG_HOME/ccache/config"
export CCACHE_DIR="$XDG_CACHE_HOME/ccache"

# Emscripten {{{1
export EM_CACHE="$XDG_CACHE_HOME/emscripten"
export EM_CONFIG="$XDG_CONFIG_HOME/emscripten"

# Golang {{{1
export GOBIN="$XDG_LOCAL_HOME/bin"
export GOPATH="$XDG_DATA_HOME/go"

# mailcap {{{1
export MAILCAP="$XDG_CONFIG_HOME/mailcap" # elinks, w3m
export MAILCAPS="$MAILCAP"   # Mutt, pine

# Python {{{1
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/config.py"
export PYTHONUSERBASE="$XDG_LOCAL_HOME"
export PYTHONPYCACHEPREFIX="$XDG_CACHE_HOME/__pycache__"
export IPYTHONDIR="$XDG_DATA_HOME/ipython"

# Ruby {{{1
export BUNDLE_USER_CACHE="$XDG_CACHE_HOME/bundle"
export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME/bundle"
export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME/bundle"

# Shells {{{1
export BASH_COMPLETION_USER_FILE="$XDG_CONFIG_HOME/bash/completion"
export ENV="$XDG_CONFIG_HOME/shell/shrc"  # sh, ksh
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"

# X11 {{{1
export XAUTHORITY="$XDG_RUNTIME_DIR/Xauthority"
export XINITRC="$XDG_CONFIG_HOME/X11/xinitrc"
export XSERVERRC="$XDG_CONFIG_HOME/X11/xserverrc"

# }}}

# dev {{{1

export VITASDK=/usr/local/vitasdk
pathmunge "$VITASDK/bin"

export DEVKITPRO="/opt/devkitpro"
export DEVKITARM="$DEVKITPRO/devkitARM"
export DEVKITPPC="$DEVKITPRO/devkitPPC"

pathmunge /usr/lib/ccache/bin
pathmunge $XDG_DATA_HOME/gem/ruby/*/bin

# PATH {{{1

pathmunge "$XDG_LOCAL_HOME/bin"
pathmunge "$XDG_LOCAL_HOME/bin/AppImages"
pathmunge "$XDG_LOCAL_HOME/bin/scripts"

pathmunge "$XDG_LOCAL_HOME/bin/_patch"

# default programs {{{1

export BROWSER=firefox
export EDITOR=vim
export MANPAGER="vim -M +MANPAGER -"
export PAGER="less"
export SHELL="$(command -v bash)"
export TERMINAL=xterm
export VISUAL="$EDITOR"

# theme {{{1

# GTK theme
export GTK_THEME="$(grep gtk-theme-name $GTK2_RC_FILES | cut -d'"' -f 2)"
gtk_theme_rc="$XDG_DATA_HOME/themes/$GTK_THEME/gtk-2.0/gtkrc"
[ -f "$gtk_theme_rc" ] && export GTK2_RC_FILES="$GTK2_RC_FILES:$gtk_theme_rc"; unset gtk_theme_rc

# Set Qt to use GTK theme
export QT_QPA_PLATFORMTHEME=gtk2

# other {{{1

# File with temporary flags
export TMPFLAGS="$TMPDIR/flags_$USER"

# Japanese input
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
export GTK_IM_MODULE=fcitx

# less' default options
export LESS="-FXRS"

# Enable GPG agent
export GPG_AGENT_INFO

# Suppress Wine debug informations
export WINEDEBUG=-all

# Enable touchscreen in Firefox
export MOZ_USE_XINPUT2=1

# -end- {{{1

[ -f "$XDG_AUX_DIR/env_variables" ] && . "$XDG_AUX_DIR/env_variables" # additional, local env_variables
